@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@Html.ActionLink("New Customer", "New", "Customers", null, new { @class = "btn btn-primary gap" })
<table id="customers" class="table table-bordered table-hover" style="margin-top:25px;">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
            <th>#</th>
            <th>Rented Movies</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<div class="modal" tabindex="-1" role="dialog" id="movieList">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mListHeader">Rented Movie List</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table id="mList" class="table table-bordered table-hover" style="margin-top:25px; width:526px;">
                    <thead>
                        <tr>
                            <th>Movie</th>
                            <th>Rented Date</th>
                            <th>Date Returned</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(function () {

            var table = $("#customers").DataTable({
                ajax: {
                    url: "/api/customers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function (data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        data: "membershipType.name"
                    },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>"
                        }
                    },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link btnList' data-mlistid=" + data + ">Movie List</button>";
                        }
                    }
                ]

            });

            $("#customers").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });

            });

            $("#customers").on("click", ".btnList", function () {

                var id = $(this).data("mlistid");

                var tableList = $("#mList").DataTable({
                    "bDestroy": true,
                    ajax: {
                        url: "/api/customers/RentedMovies/" + id,
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "name",
                            render: function (data, type, movie) {
                                return movie.name + "<i id=" + movie.id + " data-movieId=" + movie.id + "></i>";
                            }
                        },
                        {
                            data: "dateRented",
                            render: function (data, type, row) {
                                if (type === "sort" || type === "type") {
                                    return data;
                                }
                                return moment(data).format("MM-DD-YYYY HH:mm");
                            }
                        },
                        {
                            data: "dateReturned",
                            render: function (data, type, movie) {
                                if (type === "sort" || type === "type") {
                                    return data;
                                }
                                if (data == null) {
                                    return "<div class='input-group'><div class='input-group-prepend'><div class='input-group-text'>" +
                                           "<input type='checkbox' data-movieId=" + movie.id + "  class='returned' aria-label='Checkbox for following text input'>" +
                                           "</div></div><input type='text' placeholder='Returned' id='returnedDate' class='form-control' aria-label='Text input with checkbox'></div>";
                                }

                                return moment(data).format("MM-DD-YYYY HH:mm");
                            }
                        }
                    ]
                });

                $("#movieList").modal();

            });


            $("#mList").on("change", ".returned", function () {
                //var id = $(".btnList").data("mlistid");
                var check = $(this);

                if ($(this).prop('checked')) {
                    var returnedDate = new Date();
                    $(this).parent().parent().parent().find("input").val(moment(returnedDate).format("MM-DD-YYYY HH:MM"));

                    bootbox.confirm({
                        message: "Are you sure?",
                        className: 'bootboxAlert',
                        callback: function (result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/customers/UpdateRentals/" + check.attr("data-movieId") + "/" + id,
                                    method: "PUT"
                                }).done(function () {
                                    toastr.success("Rentals successfully recorded.");
                                }).fail(function () {
                                    toastr.error("Something unexpected happened.");
                                });
                            }
                            else {
                                $(check).prop('checked', false);
                                $(check).parent().parent().parent().find("input").val("");
                            }
                        }
                    });
                }
                else {
                    $(this).parent().parent().parent().find("input").val("");
                }

            })
        });

    </script>

}

